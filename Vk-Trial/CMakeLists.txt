cmake_minimum_required(VERSION 3.0.0)
project(Vk-Trial VERSION 0.1.0)

set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH};$ENV{VCPKG_ROOT}/installed/x64-windows-static-md/share/glfw3")

include(BuildUtilities.cmake)

# Set a default build type if none was specified
if(NOT CMAKE_BUILD_TYPE OR NOT CMAKE_CONFIGURATION_TYPES)
  message(STATUS "Setting build type to 'Debug' as none was specified.")
  set(CMAKE_BUILD_TYPE Debug CACHE STRING "Choose the type of build." FORCE)
  # Set the possible values of build type for cmake-gui
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release"
    "MinSizeRel" "RelWithDebInfo")
endif()

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if(MSVC)
add_compile_options("/MP")
endif()

find_package(Vulkan REQUIRED)

if(NOT Vulkan_FOUND)
  message(FATAL_ERROR "Could not find Vulkan libraray")
else()
  message(STATUS "Vulkan library: ${Vulkan_LIBRARY}")
endif()

find_program(Vulkan_GLSLANG_VALIDATOR
  NAMES glslangValidator
  HINTS ENV VULKAN_SDK
  PATH_SUFFIXES bin)
if(NOT Vulkan_GLSLANG_VALIDATOR)
  message(FATAL_ERROR "glslangValidator not found!")
endif()

set(THIRD_PARTY_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../ThirdParty")
set(COMMON_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Common)

set(DXC "${THIRD_PARTY_DIR}/dxc_2021_12_08/bin/x64/dxc.exe")

find_package(glfw3 CONFIG REQUIRED)

find_package(directxtex CONFIG REQUIRED)

find_path(STB_INCLUDE_DIRS "stb.h")
include_directories(${STB_INCLUDE_DIRS})

include_directories(
  ${Vulkan_INCLUDE_DIRS}
  ${THIRD_PARTY_DIR}/glm
  ${COMMON_SOURCE_DIR}
  ${THIRD_PARTY_DIR}/stb
  ${THIRD_PARTY_DIR}/VulkanMemoryAllocator/include
)

if(CMAKE_BUILD_TYPE)
  string(TOUPPER "${CMAKE_BUILD_TYPE}" MY_CXX_BUILD_TYPE_EXT)
  string(TOUPPER "_${CMAKE_BUILD_TYPE}" MY_C_BUILD_TYPE_EXT)
  add_compile_definitions(${MY_C_BUILD_TYPE_EXT} ${MY_CXX_BUILD_TYPE_EXT})

  set(TRIAL_OUTDIR_END_SUFFIX ${CMAKE_BUILD_TYPE})
  set(TRIAL_OUTDIR_SUFFIX ${TRIAL_OUTDIR_END_SUFFIX})

  link_directories(${THIRD_PARTY_DIR}/DirectXTex/build/bin/CMake/${TRIAL_OUTDIR_END_SUFFIX}
  ${CMAKE_CURRENT_BINARY_DIR}/glfw/src/${CMAKE_BUILD_TYPE})

else()
  message(FATAL_ERROR "Build type unspecified!")
endif()

if(MSVC)
add_compile_definitions("UNICODE" "_UNICODE")
add_link_options("/NODEFAULTLIB:libcmt.lib")
endif(MSVC)

if(WIN32)
add_compile_definitions("WIN32_LEAN_AND_MEAN")
endif(WIN32)

add_subdirectory(VkHelloWorld)
add_subdirectory(Common)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
